/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.devtools.mobileharness.api.model.error;

import com.google.common.base.Preconditions;
import com.google.devtools.common.metrics.stability.model.proto.ErrorTypeProto.ErrorType;
import com.google.devtools.common.metrics.stability.util.ErrorIdFormatter;

/**
 * Error IDs for Mobile Harness User Plugin. A user plugin in MobileHarness could be
 * Client/Lab/Gateway plugin.
 *
 * @see <a href="http://go/mh-exception">MH Exception</a> for more detail and guidance
 */
public enum UserErrorId implements ErrorId {

  /** Youtube MobileHarness Plugin: 200_001 ~ 200_100 */
  YOUTUBE_FAIL_ANALYZER_TEST_FAILED(200_001, ErrorType.CUSTOMER_ISSUE),
  YOUTUBE_FAIL_ANALYZER_TEST_CRASHED(200_002, ErrorType.CUSTOMER_ISSUE),

  /** WebRTC MobileHarness Plugins: 200_100 ~ 200_200 */
  WEBRTC_SPONGE_XML_TEST_OUTPUT_FILE_NOT_FOUND(200_101, ErrorType.CUSTOMER_ISSUE),
  WEBRTC_SPONGE_XML_TEST_OUTPUT_READ_ERROR(200_102, ErrorType.CUSTOMER_ISSUE),

  /** DocsPerf MobileHarness Plugins: 200_200 ~ 200_300 */
  DOCSPERF_PERF_TEST_DB_READ_ERROR(200_201, ErrorType.CUSTOMER_ISSUE),
  DOCSPERF_PERFGATE_TAGS_PARAMETER_MISSING(200_202, ErrorType.CUSTOMER_ISSUE),
  DOCSPERF_PERF_TEST_DB_MISSING(200_203, ErrorType.CUSTOMER_ISSUE),
  DOCSPERF_FLAKINESS_THRESHOLD_FAILURE(200_204, ErrorType.CUSTOMER_ISSUE),
  DOCSPERF_PERFGATE_UPLOAD_ERROR(200_205, ErrorType.CUSTOMER_ISSUE),
  DOCSPERF_CHANGELIST_PARSING_ERROR(200_206, ErrorType.CUSTOMER_ISSUE),

  /** Android System Infra Plugins: 200_301 - 200_399 */
  // Acts Results Spanner Plugin
  ANDROID_SYSTEM_INFRA_ACTS_RESULTS_PLUGIN_SPANNER_FAILURE(200_301, ErrorType.CUSTOMER_ISSUE),
  ANDROID_SYSTEM_INFRA_ACTS_USAGE_METADATA_PLUGIN_SPANNER_FAILURE(
      200_302, ErrorType.CUSTOMER_ISSUE),
  ANDROID_SYSTEM_INFRA_DEVICE_CLASSIFIER_PLUGIN_SPANNER_FAILURE(200_303, ErrorType.CUSTOMER_ISSUE),
  ANDROID_SYSTEM_INFRA_ERROR_RESULTS_PLUGIN_SPANNER_FAILURE(200_304, ErrorType.CUSTOMER_ISSUE),
  ANDROID_SYSTEM_INFRA_FLASHING_INFO_PLUGIN_SPANNER_FAILURE(200_305, ErrorType.CUSTOMER_ISSUE),
  ANDROID_SYSTEM_INFRA_POWER_RESULTS_PLUGIN_SPANNER_FAILURE(200_306, ErrorType.CUSTOMER_ISSUE),
  ANDROID_SYSTEM_INFRA_ACTS_RESULTS_PLUGIN_AB_FAILURE(200_307, ErrorType.CUSTOMER_ISSUE),
  ANDROID_SYSTEM_INFRA_DEVICE_CLASSIFIER_PLUGIN(200_308, ErrorType.CUSTOMER_ISSUE),
  ANDROID_SYSTEM_INFRA_RADIO_SIDE_LOADER_PLUGIN_FILE_NOT_FOUND(200_309, ErrorType.CUSTOMER_ISSUE),
  ANDROID_SYSTEM_INFRA_RADIO_SIDE_LOADER_PLUGIN_FASTBOOT_FAILURE(200_310, ErrorType.CUSTOMER_ISSUE),

  // Monsoon recovery job 200_331 - 200_340
  ANDROID_SYSTEM_INFRA_MONSOON_RECOVERY_NO_VOLTAGE(200_331, ErrorType.CUSTOMER_ISSUE),
  ANDROID_SYSTEM_INFRA_MONSOON_RECOVERY_BAD_VOLTAGE(200_332, ErrorType.CUSTOMER_ISSUE),

  // Device Affinity Data Collection Plugin 200_341 - 200_360
  DEVICE_AFFINITY_DATA_COLLECTION_PLUGIN_BAD_CONFIG(200_341, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_DATA_COLLECTION_PLUGIN_SPANNER_WRITE_ERROR(200_342, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_DATA_COLLECTION_PLUGIN_SPANNER_CONNECTION_INITIALIZATION_ERROR(
      200_343, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_PICKER_SPANNER_CONNECTION_INITIALIZATION_ERROR(200_344, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_PICKER_SPANNER_READ_ERROR(200_345, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_PICKER_SPANNER_WRITE_ERROR(200_346, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_PICKER_INTERRUPTION(200_347, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_PICKER_NO_SNAPSHOT(200_348, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_PICKER_NO_DEVICES(200_349, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_PICKER_OUT_OF_TIME(200_350, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_PICKER_BAD_CONFIG(200_251, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_PICKER_FAILED_QUERY_DEVICES(200_252, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_PICKER_FAILED_TO_SET_DIMENSION(200_253, ErrorType.CUSTOMER_ISSUE),
  DEVICE_AFFINITY_PICKER_INTERRUPTED_WHILE_SLEEPING(200_254, ErrorType.CUSTOMER_ISSUE),

  /** Android Media Framework Engineering Productivity Plugins: 200_400 ~ 200_450 */
  AMSTI_TEST_PORT_FORWARD_ERROR(200_400, ErrorType.CUSTOMER_ISSUE),
  AMSTI_TEST_PORT_REVERSAL_ERROR(200_401, ErrorType.CUSTOMER_ISSUE),
  AMSTI_TEST_ADB_EXECUTION_ERROR(200_402, ErrorType.CUSTOMER_ISSUE),

  /** Google Camera Plugins: 200_451 - 200_500 */
  GCA_DEVICE_NOT_LOADED_ERROR(200_451, ErrorType.CUSTOMER_ISSUE),

  /** Tectonic Perfgate Client Plugin: 200_501 - 200_550 */
  TECTONIC_PERFGATECLIENT_PLUGIN_REGRESSION(200_501, ErrorType.CUSTOMER_ISSUE),

  /** Pixelmigrate iOS Simulator Plugin: 200_551 - 200_600 */
  PIXELMIGRATE_IOS_INPUT_MISSING_TEST_SKIPPED(200_551, ErrorType.CUSTOMER_ISSUE),
  PIXELMIGRATE_IOS_SIMULATOR_PORT_NOT_FOUND(200_552, ErrorType.CUSTOMER_ISSUE),

  /** Plugins in MH integration tests: 200_601 - 200_650 */
  SKIP_TEST_ERROR_ON_PURPOSE_SMALL_ID(200_601, ErrorType.CUSTOMER_ISSUE),
  SKIP_TEST_ERROR_ON_PURPOSE_LARGE_ID(200_602, ErrorType.CUSTOMER_ISSUE),
  SKIP_JOB_ERROR_ON_PURPOSE(200_603, ErrorType.CUSTOMER_ISSUE),
  TEST_RESULT_VALIDATION_ERROR(200_604, ErrorType.CUSTOMER_ISSUE),
  JOB_RESULT_VALIDATION_ERROR(200_605, ErrorType.CUSTOMER_ISSUE),

  /** Kibble Lab Plugin: 200_651 - 200_700 */
  KIBBLE_LAB_PLUGIN_UNSUPPORTED_TEST_CONFIGURATION(200_651, ErrorType.CUSTOMER_ISSUE),
  KIBBLE_LAB_PLUGIN_INCORRECT_LAB_CONFIGURATION(200_652, ErrorType.CUSTOMER_ISSUE),
  KIBBLE_LAB_PLUGIN_COLLECTORS_OFFLINE(200_653, ErrorType.CUSTOMER_ISSUE),
  KIBBLE_LAB_PLUGIN_UNEXPECTED_BEHAVIOUR(200_654, ErrorType.CUSTOMER_ISSUE),

  /** Plugins in Google3HostTest Plugin: 200_701 - 200_750 */
  GOOGLE3HOST_TEST_COMMAND_START_ERROR(200_701, ErrorType.CUSTOMER_ISSUE),
  GOOGLE3HOST_TEST_COMMAND_FAILURE_ERROR(200_702, ErrorType.CUSTOMER_ISSUE),
  GOOGLE3HOST_TEST_JOB_TIMEOUT_ERROR(200_703, ErrorType.CUSTOMER_ISSUE),
  GOOGLE3HOST_TEST_TEST_TIMEOUT_ERROR(200_704, ErrorType.CUSTOMER_ISSUE),
  GOOGLE3HOST_TEST_SUBTEST_NONPASS(200_705, ErrorType.CUSTOMER_ISSUE),

  GOOGLE3HOST_TEST_RETRIEVE_OTA_PERMISSION_DENIED(200_706, ErrorType.CUSTOMER_ISSUE),
  GOOGLE3HOST_TEST_RETRIEVE_OTA_NOT_FOUND(200_707, ErrorType.CUSTOMER_ISSUE),
  GOOGLE3HOST_TEST_RETRIEVE_OTA_INVALID_ARGUMENT(200_708, ErrorType.CUSTOMER_ISSUE),
  GOOGLE3HOST_TEST_RETRIEVE_OTA_UNKNOWN_ERROR(200_709, ErrorType.CUSTOMER_ISSUE),

  GOOGLE3HOST_TEST_UNSUPPORTED_DRIVER(200_710, ErrorType.CUSTOMER_ISSUE),

  /** Dollhouse Plugin: 200_751 - 200_800 */
  DOLLHOUSE_PLUGIN_CONFIGURATION(200_751, ErrorType.CUSTOMER_ISSUE),
  DOLLHOUSE_PLUGIN_DOLLHOUSE_SESSION_RPC(200_752, ErrorType.CUSTOMER_ISSUE),

  /** NearbyMhClientPlugin.kt: 200_801 ~ 200_850 */
  NEARBY_MH_PLUGIN_OTA_TEST_PROPERTY_NOT_FOUND(200_801, ErrorType.CUSTOMER_ISSUE),
  NEARBY_MH_PLUGIN_OTA_NOT_MATCH_WITH_SUBDEVICE(200_802, ErrorType.CUSTOMER_ISSUE),

  /** GPay Flutter Plugin: 200_851 ~ 200_900 */
  GPAY_FLUTTER_MH_PLUGIN_WALKMAN_TEST_PROPERTY_ERROR(200_851, ErrorType.CUSTOMER_ISSUE),

  /** Walkman Postprocessor Plugin: 200_901 ~ 200_950 */
  WALKMAN_POSTPROCESSOR_ERROR(200_901, ErrorType.CUSTOMER_ISSUE),

  /** Setup Wizard OtaFlashStationClientPlugin: 200_951 - 201_000 */
  SUW_OTA_FLASH_STATION_CLIENT_PLUGIN_PARAMETER_MISSING(200_951, ErrorType.CUSTOMER_ISSUE),
  SUW_OTA_FLASH_STATION_CLIENT_PLUGIN_FILE_ERROR(200_952, ErrorType.CUSTOMER_ISSUE),
  SUW_OTA_FLASH_STATION_CLIENT_PLUGIN_RPC_ERROR(200_953, ErrorType.CUSTOMER_ISSUE),

  /** TestXmlParser: 201_001 - 201_050 */
  UNABLE_TO_EXTRACT_TEST_NAME_FROM_FILE_NAME(201_001, ErrorType.CUSTOMER_ISSUE),

  /** Project ECO Plugin: 201_051 - 201_100 */
  ECO_SKIP_TEST_NO_ITEMS_TO_PROCESS(201_051, ErrorType.CUSTOMER_ISSUE),

  /** Stadia Engprod LETI Plugin: 201_101 - 201_150 */
  LETI_ENV_BINARY_EXECUTION_ERROR(201_101, ErrorType.CUSTOMER_ISSUE),
  LETI_TEST_BINARY_EXECUTION_ERROR(201_102, ErrorType.CUSTOMER_ISSUE),
  LETI_TEST_FAILURE(201_103, ErrorType.CUSTOMER_ISSUE),
  LETI_UNEXPECTED_BEHAVIOUR(201_104, ErrorType.CUSTOMER_ISSUE),

  /** Assistant hubmode stress test plugin: 201_151 - 201_200 */
  ASSISTANT_HUBMODE_STRESS_TEST_FAILURE(201_151, ErrorType.CUSTOMER_ISSUE),

  /** Plugins in MH-AIT integration tests: 201_201 - 201_250 */
  AIT_SKIP_JOB_MARK_JOB_PASS(201_201, ErrorType.CUSTOMER_ISSUE),
  AIT_SKIP_JOB_MARK_JOB_FAIL(201_202, ErrorType.CUSTOMER_ISSUE),

  /**
   * User plugins that use {@link
   * com.google.devtools.mobileharness.shared.util.utp.UtpHostPluginConfigUpdater}: 201_251 -
   * 201_300
   */
  UTP_HOST_PLUGIN_CONFIG_UPDATER_PLUGIN_NOT_FOUND(201_251, ErrorType.CUSTOMER_ISSUE),
  UTP_HOST_PLUGIN_CONFIG_UPDATER_FOUND_MULTIPLE_PLUGINS(201_252, ErrorType.CUSTOMER_ISSUE),

  USER_ERROR_ID_PLACE_HOLDER_TO_BE_RENAMED(600_000, ErrorType.CUSTOMER_ISSUE);

  public static final int MIN_CODE = AndroidErrorId.MAX_CODE + 1;
  public static final int MAX_CODE = 600_000;

  private final int code;
  private final ErrorType type;

  UserErrorId(int code, ErrorType type) {
    Preconditions.checkArgument(code >= MIN_CODE);
    Preconditions.checkArgument(code <= MAX_CODE);
    Preconditions.checkArgument(type == ErrorType.CUSTOMER_ISSUE);
    this.code = code;
    this.type = type;
  }

  @Override
  public int code() {
    return code;
  }

  @Override
  public ErrorType type() {
    return type;
  }

  @Override
  public String toString() {
    return ErrorIdFormatter.formatErrorId(this);
  }
}
